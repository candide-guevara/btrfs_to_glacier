syntax = "proto3";
package messages;
// Cannot use "btrfs_to_glacier/messages" because it will influence the path
// where protoc will put the files...
option go_package = "./messages";

message SubVolume {
  // Both the uuid in the metadata storage AND the actual uuid of the snapshot.
  string  uuid = 1; 
  string  mounted_path = 2; 
  uint64  gen_at_creation = 4;
  fixed64 created_ts = 5;
  // Only snapshots will have this field not empty
  string  parent_uuid = 6; 
  string  received_uuid = 7; 
  bool    read_only = 8;
  SnapshotChunks  data = 9;
  SystemInfo      origin_sys = 10;
}

message SnapshotChunks {
  message Chunk {
    // Does not correspond to any volume, purely an id for the data storage.
    string uuid = 1; 
    uint64 start = 2;
    uint64 size = 3;
  }
  string key_fingerprint = 3;
  repeated Chunk chunks = 4;
}

message SystemInfo {
  uint32 kern_major = 1;
  uint32 kern_minor = 2;
  uint32 btrfs_usr_major = 5;
  uint32 btrfs_usr_minor = 6;
  string tool_git_commit = 7;
}

message SnapshotSeqHead {
  // Both the uuid in the metadata storage
  // AND the actual uuid of the volume being backed up.
  string uuid = 1; 
  string cur_seq_uuid = 2;
  repeated string prev_seq_uuid = 3;
}

message SnapshotSequence {
  // Does not correspond to any volume, purely an id for the metadata storage.
  string uuid = 1; 
  // The volume being backed up. All `snaps` should be children of `volume`.
  SubVolume volume = 2;
  // Ordered from oldest to newest.
  repeated string snap_uuids = 3;
}

message SnapshotChanges {
  enum Type {
    UNKNOWN = 0;
    WRITE = 1;
    DELETE = 2;
    DEL_DIR = 3;
    NEW = 4;
    NEW_DIR = 5;
    MOVE = 6; // AFAIK cannot distinguish between dir and files moves
  }
  message Change {
    Type type = 1;
    string path = 2;
    string from = 3;
  }
  string from_uuid = 1; 
  string to_uuid = 2; 
  repeated Change changes = 3;
}

