syntax = "proto3";
package messages;
option go_package = "./messages";

message Aws {
  // Use session tokens to get temporal credentials.
  // https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken
  string access_key_id = 1;
  string secret_access_key = 2;
  string session_token = 3;
  string region = 4;
}

// Additional tools not directly related to backup/restores.
message Tool {
  enum ToolType {
    INVALID = 0;
    BTRFS_SNAP_DIFFS = 1;
    GARBAGE_COLLECTOR = 2;
    META_EXPLORE = 3;
  }
  ToolType type  = 1;
  string name    = 2;
  string wf_name = 3;
}

// links source -> dest -> restore referenced by name.
message Workflow {
  string  name    = 1;
  string  source  = 2;
  string  backup  = 3;
  string  restore = 4;
}

message Source {
  enum SourceType {
    INVALID  = 0;
    BTRFS  = 1;
  }
  message VolSnapPathPair {
    // The absolute path to the subvolume to backup.
    string vol_path = 1;
    // The absolute path of the directory where snapshots from `vol_path` are stored.
    string snap_path = 2;
  }
  message SnapHistory {
    // All snapshots from the subvolume that are less than `days_keep_all` old
    // are guaranteed to be kept.
    uint32 days_keep_all = 1;
    // Only one snapshot that is older than `days_keep_all` will be kept
    // for every `keep_one_period_days` window.
    uint32 keep_one_period_days = 2;
  }
  SourceType type = 1;
  string name = 2;
  repeated VolSnapPathPair paths = 3;
  SnapHistory history = 4;
}

message Backup {
  enum BackupType {
    INVALID = 0;
    AWS = 1;
    FILESYSTEM = 2;
    MEM_EPHEMERAL = 3;
  }

  message Partition {
    string fs_uuid = 1;
    string mount_root = 2;
    string metadata_dir = 3;
    string storage_dir = 4;
  }
  message RoundRobin {
    repeated Partition partitions = 2;
  }
  message Fs {
    repeated RoundRobin sinks = 1;
  }

  message DynamoDb {
    string metadata_table_name = 1;
  }
  message S3 {
    string storage_bucket_name = 1;
    string metadata_bucket_name = 2;
    uint64 chunk_len = 3;
  }
  message Aws {
    DynamoDb dynamo_db = 5;
    S3 s3 = 6;
  }

  BackupType   type = 1;
  string       name = 2;
  // You can only have oneof the following.
  Aws aws = 3;
  Fs  fs = 4;
  // Did not use oneof because it is a pain to use in golang.
}

message Restore {
  enum RestoreType {
    INVALID = 0;
    BTRFS  = 1;
  }
  RestoreType type = 1;
  string name = 2;
  // The absolute path of the directory where all restored snapshots should be stored.
  string root_restore_path = 3;
}

message Config {
  repeated Workflow workflows = 1;
  repeated Tool tools = 2;

  repeated Source  sources  = 3;
  repeated Backup  backups  = 4;
  repeated Restore restores = 5;

  // The first element is used to encrypt new content.
  // Key length may be imposed by the encryption algorithm.
  // Keys are stored symmetrically encrypted into the configuration.
  repeated string encryption_keys = 6;

  Aws aws = 7;
}

